generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets   = ["native", "windows"]
  engineType      = "library"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model category {
  id    Int     @id @default(autoincrement())
  label String
  pid   Int?
  goods goods[]
}

model goods {
  id                  Int                   @id @default(autoincrement())
  name                String
  code                String
  cid                 Int?
  type                String?
  brand               String?
  unit                String?
  color               String?
  standard            String?
  material            String?
  buyPrice            Float?
  salePrice           Float?
  descs               String?
  updater             String?
  updatime            DateTime? @updatedAt
  state               Int                   @default(1)
  picture             String?
  category            category?             @relation(fields: [cid], references: [id])
  purchase_order_item purchase_order_item[]
  sale_order_item     sale_order_item[]
  stock               stock[]
}

model purchase_order {
  id                  Int                   @id @default(autoincrement())
  supplierId          Int?
  code                String?
  payPrice            Float?
  totalPrice          Float?
  userId              Int?
  descs               String
  date                DateTime?
  purchase_supplier   purchase_supplier?    @relation(fields: [supplierId], references: [id])
  purchase_order_item purchase_order_item[]
}

model purchase_order_item {
  id             Int            @id @default(autoincrement())
  orderId        Int
  repoId         Int
  goodsId        Int?
  amount         Int?
  price          Float?
  totalPrice     Float?
  goods          goods?         @relation(fields: [goodsId], references: [id])
  purchase_order purchase_order @relation(fields: [orderId], references: [id])
  repo           repo           @relation(fields: [repoId], references: [id])
}

model purchase_supplier {
  id             Int              @id @default(autoincrement())
  name           String
  linkman        String
  mobile         String?
  address        String?
  descs          String?
  state          Int              @default(1)
  updater        String?
  updatime       DateTime?
  purchase_order purchase_order[]
}

model repo {
  id                  Int                   @id @default(autoincrement())
  name                String
  code                String
  address             String?
  descs               String?
  adminId             Int?
  updater             String?
  updatime            DateTime?
  state               Int                   @default(1)
  purchase_order_item purchase_order_item[]
  sale_order_item     sale_order_item[]
  stock               stock[]
}

model sale_customer {
  id         Int          @id @default(autoincrement())
  name       String
  linkman    String
  mobile     String?
  address    String?
  descs      String?
  state      Int          @default(1)
  updater    String?
  updatime   DateTime?
  sale_order sale_order[]
}

model sale_order {
  id              Int               @id @default(autoincrement())
  customerId      Int?
  code            String?
  payPrice        Float?
  totalPrice      Float?
  userId          Int?
  descs           String
  date            DateTime?
  otherFee        Float?
  payOtherFee     Float?
  confirm         Boolean?
  sale_customer   sale_customer?    @relation(fields: [customerId], references: [id])
  sale_order_item sale_order_item[]
}

model sale_order_item {
  id         Int        @id @default(autoincrement())
  orderId    Int
  repoId     Int
  goodsId    Int?
  amount     Int?
  price      Float?
  totalPrice Float?
  goods      goods?     @relation(fields: [goodsId], references: [id])
  sale_order sale_order @relation(fields: [orderId], references: [id])
  repo       repo       @relation(fields: [repoId], references: [id])
}

model stock {
  id             Int       @id @default(autoincrement())
  goodsId        Int
  repoId         Int
  totalCount     Int?
  saleCount      Int?
  buyPrice       Float?
  avgBuyPrice    Float?
  salePrice      Float?
  totalBuyPrice  Float?
  totalSalePrice Float?
  updatime       DateTime?
  state          Int       @default(1)
  goods          goods     @relation(fields: [goodsId], references: [id])
  repo           repo      @relation(fields: [repoId], references: [id])
}

model user {
  id         Int       @id @default(autoincrement())
  account    String
  password   String
  roleId     Int?
  roleName   String?
  employeeId Int?
  updater    String?
  updatime   DateTime?
  state      Int       @default(1)
  isLocked   Int?      @default(0)
  lockTime   DateTime?
}
